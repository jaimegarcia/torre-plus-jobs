{"version":3,"sources":["components/utils/CustomSkeleton.js","components/opportunities/Opportunity.js","services/opportunities/opportunitiesActions.js","components/opportunities/Opportunities.js","services/query/queryActions.js","components/search/Search.js","components/navbar/NavBar.js","layouts/AppLayout.js","pages/home/HomePage.js","components/opportunitydetail/PositionDetails.js","components/opportunitydetail/OrganizationsDetail.js","components/opportunitydetail/OportunityDetail.js","services/opportunitydetail/opportunityDetailActions.js","services/mentors/mentorsActions.js","components/mentors/Mentor.js","components/mentors/Mentors.js","components/card/CardForm.js","components/card/CardDialog.js","pages/opportunitydetail/OpportunityDetailPage.js","Routes.js","App.js","services/query/queryReducer.js","services/opportunities/opportunitiesReducer.js","services/opportunitydetail/opportunityDetailReducer.js","services/mentors/mentorsReducer.js","services/index.js","store.js","serviceWorker.js","index.js"],"names":["connect","state","width","height","count","circle","theme","useTheme","color","palette","type","grey","highlightColor","useStyles","makeStyles","root","minWidth","marginBottom","bullet","display","margin","transform","title","fontSize","pos","chipSkill","marginRight","opportunityType","green","applyButton","backgroundColor","amber","opportunity","classes","date","Date","deadline","console","log","target","to","id","style","textDecoration","Card","className","variant","CardContent","Typography","component","objective","organizations","moment","startOf","fromNow","skills","length","map","x","Chip","key","label","replace","compensation","locations","CardActions","Button","size","getOpportunitiesSuccess","opportunities","payload","getCurrentOpportunities","start","end","globalPage","setGlobalPage","page","fetchOpportunities","expression","baseUrl","URL","dispatch","a","fetch","method","headers","body","JSON","stringify","query","res","json","data","total","error","loading","current","searching","React","useState","setPage","updateOpportunities","forceUpdate","newGlobalPage","parseInt","handlePageChange","event","value","newPage","useEffect","Box","TablePagination","data-testid","onChangePage","rowsPerPage","rowsPerPageOptions","Array","fill","idx","setQuery","name","toUpperCase","generateFullExpresion","fullExpression","expressions","push","generatePartExpression","chips","newExpression","chip","skillsExpression","setSkillsExpression","orgsExpression","setOrgsExpression","setFullExpression","Fragment","defaultValue","onChange","newSkillsExpression","handleSkillsChange","placeholder","fullWidth","newOrgsExpression","handleOrganizationsChange","flexGrow","menuButton","spacing","noDecorations","palletType","handleThemeChange","AppBar","position","Toolbar","IconButton","aria-label","onClick","children","themeState","setThemeState","createMuiTheme","primary","main","ThemeProvider","CssBaseline","Container","maxWidth","steps","hasErrors","Stepper","index","Step","StepLabel","PositionDetails","details","str","code","charAt","slice","content","split","i","OrganizationsDetail","src","picture","opportunityDetail","useParams","fetchOpportunity","gutterBottom","shuffleArray","array","j","Math","floor","random","temp","getMentorsSuccess","mentors","getCurrentMentors","fetchMentors","media","paddingTop","chooseButton","mentor","currency","symbol","amount","professionalHeadline","selectMentor","username","href","fetchData","autoPlay","navButtonsAlwaysVisible","CheckoutForm","selectedMentor","succeeded","setSucceeded","setError","processing","setProcessing","disabled","setDisabled","setName","email","setEmail","clientSecret","setClientSecret","mentorFee","setMentorFee","stripe","useStripe","elements","useElements","then","handleChange","empty","message","handleSubmit","ev","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","onSubmit","textAlign","required","e","options","hidePostalCode","base","fontFamily","fontSmoothing","invalid","iconColor","role","stripePromise","loadStripe","dialogPaper","breakpoints","down","openModal","setOpenModal","Dialog","aria-labelledby","open","onClose","paper","DialogContent","Grid","container","item","xs","sm","Routes","basename","exact","path","HomePage","OpportunityDetailPage","App","initialState","selectedOportunity","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","process","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6633bd8a.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { useTheme } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\nfunction CustomSkeleton({ width, height, count, circle }) {\n\n  const theme = useTheme();\n  return (\n    <SkeletonTheme\n      color={theme.palette.type===\"dark\" ? grey[300] : \"\"}\n      highlightColor={theme.palette.type===\"dark\" ? grey[200]  : \"\"}\n    >\n      <Skeleton width={width} height={height} count={count} circle={circle} />\n    </SkeletonTheme>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n});\n\nexport default connect(mapStateToProps)(CustomSkeleton);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { Button,Card,CardActions,CardContent,Chip,Typography,makeStyles } from '@material-ui/core';\nimport { green,amber } from '@material-ui/core/colors';\nimport CustomSkeleton from \"../utils/CustomSkeleton\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom:10\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  chipSkill:{\n    marginRight:5,\n    marginBottom:5\n  },\n  opportunityType:{\n    color:green[500]\n  },\n  applyButton:{\n    backgroundColor:amber[800],\n    \"&:hover\": {\n      backgroundColor:amber[900]\n    }\n  }\n});\n\nfunction Opportunity({ opportunity }) {\n\n  const classes = useStyles();\n  let date = opportunity && +new Date(opportunity.deadline);\n  console.log(\"oportunity\",opportunity)\n  \n\n  //console.log(\"individualopportunity\",opportunity,date)\n  //      to={opportunity ? `/positions/${opportunity.id}` : \"#\"}\n  return (\n\n    <Link target=\"_blank\" to={opportunity?`/opportunity/${opportunity.id}`:'/'} style={{ textDecoration: 'none' }}>\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {opportunity ? opportunity.objective : <CustomSkeleton width={300} />}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\" component=\"div\" >\n          {opportunity?  opportunity.organizations: (<CustomSkeleton width={150} />)}\n          {opportunity? date ?  (\" (Ends \"+moment(date).startOf(\"hour\").fromNow())+ \")\" :\"\": \"\"}\n        </Typography>\n        <Typography variant=\"body2\" component=\"div\">\n          {opportunity? opportunity.skills.length? opportunity.skills.map(x=>(<Chip key={x} className={classes.chipSkill} label={`${x}`} variant=\"outlined\" />)): \"\": (<CustomSkeleton width={90} />)}\n        </Typography>\n        <Typography variant=\"body2\" component=\"div\" className={classes.opportunityType}>\n          {opportunity ? opportunity.type.replace(/-/g,\" \") : <CustomSkeleton width={300} />}\n        </Typography>\n        <Typography variant=\"body2\" component=\"div\">\n          {opportunity? `Compensation: ${opportunity.compensation}`: (<CustomSkeleton width={90} />)}\n        </Typography>\n\n        <Typography variant=\"body2\" component=\"div\">\n          {opportunity ? `Location: ${opportunity.locations}`: <CustomSkeleton width={60} />}\n        </Typography>\n      </CardContent>\n      <CardActions>\n      {opportunity? <Button size=\"small\" variant=\"contained\" className={classes.applyButton} color=\"primary\">View Opportunity</Button>: <CustomSkeleton width={60} />}\n      </CardActions>\n    </Card>\n    </Link>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps)(Opportunity);\n","\n\n\n// Action Types\nexport const GET_OPPORTUNITIES = 'GET_OPPORTUNITIES';\nexport const GET_OPPORTUNITIES_SUCCESS = 'GET_OPPORTUNITIES_SUCCESS';\nexport const GET_OPPORTUNITIES_FAILURE = 'GET_OPPORTUNITIES_FAILURE';\nexport const GET_CURRENT_OPPORTUNITIES = 'GET_CURRENT_OPPORTUNITIES';\nexport const SET_GLOBAL_PAGE = 'SET_GLOBAL_PAGE';\nexport const CLEAR_OPPORTUNITIES = 'CLEAR_OPPORTUNITIES';\n\n// Create redux action creators that return an action\nexport const getOpportunities = () => ({\n  type: GET_OPPORTUNITIES,\n});\n\nexport const getOpportunitiesSuccess = opportunities => ({\n  type: GET_OPPORTUNITIES_SUCCESS,\n  payload: opportunities,\n});\n\nexport const getOpportunitiesFailure = () => ({\n  type: GET_OPPORTUNITIES_FAILURE,\n});\n\nexport const getCurrentOpportunities = (start = 0, end = 10, globalPage = 1) => ({\n  type: GET_CURRENT_OPPORTUNITIES,\n  payload: {\n    start,\n    end,\n    globalPage\n  },\n});\n\nexport const clearOpportunities = () => ({\n  type: CLEAR_OPPORTUNITIES,\n});\n\nexport const setGlobalPage = page => ({\n  type: SET_GLOBAL_PAGE,\n  payload: page,\n});\n\n// combine actions in an async thunk\nexport function fetchOpportunities(expression={}, page = 1) {\n  const baseUrl='https://cors-anywhere.herokuapp.com/http://159.203.181.231/services/opportunities';\n  const URL = `${baseUrl}?size=50&offset=${page===1?0:(page-1)*50}`;\n  return async dispatch => {\n    dispatch(getOpportunities());\n\n    try {\n      const res = await fetch(URL, {\n        method: 'POST',\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json',\n          'Accept':'*/*',\n          'Accept-Encoding':'gzip,deflate,br'\n        },\n        body:JSON.stringify({query:expression})\n      });\n\n      let data = await res.json();\n      let opportunities=data.opportunities;\n      dispatch(getOpportunitiesSuccess({opportunities,total:data.total}));\n    } catch (error) {\n      console.error(error);\n      dispatch(getOpportunitiesFailure());\n    }\n  }\n}\n\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { Box,Button } from '@material-ui/core';\n\nimport Opportunity from \"./Opportunity\";\nimport {\n  getCurrentOpportunities,\n  setGlobalPage,\n  fetchOpportunities,\n} from \"../../services/opportunities/opportunitiesActions\";\n\n\n\n\n\nfunction Opportunities({ dispatch,loading, opportunities,total,searching,globalPage,expression}) {\n  console.log(\"opportunities\",opportunities)\n  const [page, setPage] = React.useState(0);\n\n  const updateOpportunities = async(page,forceUpdate)=>{\n\n    const newGlobalPage=parseInt((page)/5)+1;\n    console.log(\"expression\",expression,globalPage,newGlobalPage,forceUpdate)\n\n    if(newGlobalPage>globalPage || forceUpdate) {\n      dispatch(setGlobalPage(newGlobalPage));\n      await dispatch(fetchOpportunities(expression, newGlobalPage));\n    }\n    \n    dispatch( getCurrentOpportunities(10*((page)%5),10*((page)%5)+10,newGlobalPage));\n  }\n  const handlePageChange = (event, value) => {\n    const newPage=value;\n    setPage(newPage);\n    updateOpportunities(newPage,false);\n  };\n\n  useEffect(() => {\n    console.log(\"searching\",searching)\n    if(searching) {\n      updateOpportunities(0,true);\n      setPage(0);\n    }\n\n  }, [expression]);\n\n  useEffect(() => {\n    console.log(\"page\",page)\n\n\n  }, [page]);\n\n  return (\n    <Box>\n      {total>0 && <TablePagination\n        data-testid=\"table-pagination-up\"\n        component=\"div\"\n        count={total}\n        page={page}\n        onChangePage={handlePageChange}\n        rowsPerPage={10}\n        rowsPerPageOptions={[10]}\n      />}\n      {loading\n        ? new Array(10)\n            .fill(null)\n            .map((opportunity, idx) => <Opportunity opportunity={opportunity} key={idx} />)\n        : opportunities.map((opportunity) => <Opportunity opportunity={opportunity} key={opportunity.id} />)}\n      {total>0 &&<TablePagination\n        component=\"div\"\n        count={total}\n        page={page}\n        onChangePage={handlePageChange}\n        rowsPerPage={10}\n        rowsPerPageOptions={[10]}\n      />}\n    </Box>\n  );\n}\n\n// Map Redux state to React component props\nconst mapStateToProps = (state) => ({\n  loading: state.opportunities.loading,\n  opportunities: state.opportunities.current,\n  total:state.opportunities.total,\n  searching: state.query.searching,\n  expression: state.query.expression,\n  globalPage: state.opportunities.globalPage\n});\n\nexport default connect(mapStateToProps)(Opportunities);\n","export const setQuery = (name, value) => ({\n  type: name.toUpperCase(),\n  payload: value,\n});\n\nexport const clearQuery = () => ({\n  type: 'CLEAR',\n});\n\nexport const setPage = (page) => ({\n  type: 'PAGE',\n  payload: page,\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport ChipInput from 'material-ui-chip-input'\nimport { setQuery} from \"../../services/query/queryActions\";\nimport { clearOpportunities,setGlobalPage } from \"../../services/opportunities/opportunitiesActions\";\n\nexport const generateFullExpresion=(...expressions)=>{\n  let fullExpression={\"and\":[]};\n  for(const expression of expressions){\n    //console.log(\"expr\",expression)\n    if(expression[\"or\"].length>0)fullExpression[\"and\"].push(expression);\n  }\n  //if(orgsExpression[\"or\"].length) fullExpression[\"and\"].push(orgsExpression);\n  //if(skillsExpression[\"or\"].length) fullExpression[\"and\"].push(skillsExpression);\n  //console.log(\"fullExpression\",JSON.stringify(fullExpression))\n  return fullExpression;\n}\nexport const generatePartExpression=(chips,type)=>{\n\n  const newExpression={}\n\n  newExpression[\"or\"]=[];\n  for(const chip of chips) {\n    if(type===\"skill/role\"){\n      newExpression[\"or\"].push({\"skill/role\":{\"text\":chip,\"experience\":\"potential-to-develop\"}})\n    }else if(type===\"organization\"){\n      newExpression[\"or\"].push({\"organization\":{\"term\":chip}})\n    }\n  }\n  console.log(\"newExpression\",newExpression)\n  return newExpression;\n  \n}\n/**\n * @param  {} {dispatch} Redux dispatcher\n */\nfunction Search({ dispatch }) {\n  const [skillsExpression, setSkillsExpression] = React.useState({\"or\":[]});\n  const [orgsExpression, setOrgsExpression] = React.useState({\"or\":[]});\n\n\n  const setFullExpression=(...expressions)=>{\n\n    const fullExpression=generateFullExpresion(...expressions);\n    dispatch(clearOpportunities());\n    dispatch(setQuery(\"expression\", fullExpression));\n    dispatch(setGlobalPage(1));\n\n  }\n  const handleSkillsChange=(chips)=>{\n    const newSkillsExpression=generatePartExpression(chips,\"skill/role\");\n    setSkillsExpression(newSkillsExpression);\n    setFullExpression(newSkillsExpression,orgsExpression);\n\n    \n  }\n  const handleOrganizationsChange=(chips)=>{\n    const newOrgsExpression=generatePartExpression(chips,\"organization\");\n    setOrgsExpression(newOrgsExpression);\n    setFullExpression(skillsExpression,newOrgsExpression);\n\n  }\n  return (\n    <React.Fragment>\n      <ChipInput\n        data-testid=\"chip-input-skills\"\n        defaultValue={[]}\n        onChange={(chips) => handleSkillsChange(chips)}\n        variant=\"outlined\"\n        color=\"primary\"\n        placeholder=\"Search Skills/Roles: eg.React, Software Engineer\"\n        fullWidth={true}\n      />\n      <br/><br/><br/>\n      <ChipInput\n        data-testid=\"chip-input-orgs\"\n        defaultValue={[]}\n        onChange={(chips) => handleOrganizationsChange(chips)}\n        variant=\"outlined\"\n        color=\"primary\"\n        placeholder=\"Search Organizations: eg.Torre, Google\"\n        fullWidth={true}\n      />\n  </React.Fragment>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps)(Search);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport {AppBar,Button,IconButton,Typography,Toolbar,makeStyles} from '@material-ui/core';\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  noDecorations:{\n    color: \"inherit\",\n    textDecoration: \"none!important\",\n    \"&:visited\": {\n      textDecoration: \"none!important\",\n    }\n  }\n}));\n\nfunction NavBar({ palletType,handleThemeChange }) {\n  const classes = useStyles();\n\n  return (\n\n    <AppBar position=\"static\" data-testid=\"app-bar\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          <Link className={classes.noDecorations} to=\"/\">Torre Mentors</Link>\n        </Typography>\n        <IconButton aria-label=\"ligth dark mode\" color=\"inherit\" onClick={() => handleThemeChange()} data-testid=\"dark-mode-toggle\">\n            {palletType===\"dark\"?<Brightness7Icon />:<Brightness6Icon />}\n          </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps)(NavBar);\n","import React, { useState }  from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport NavBar from \"../components/navbar/NavBar\";\nimport {CssBaseline,Container} from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\n\nfunction AppLayout({ children }) {\n  const [themeState, setThemeState] = useState(false);\n  const palletType = themeState ? \"light\" : \"dark\";\n  const theme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary:{\n        main: themeState ? '#FFF': grey[900]\n      }\n    },\n   \n  });\n  const handleThemeChange = () => {\n    setThemeState(!themeState);\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <NavBar palletType={palletType} handleThemeChange={handleThemeChange}/>\n      <Container maxWidth=\"lg\">{children}</Container>\n    </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps)(AppLayout);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {Typography,Step,StepLabel,Stepper} from '@material-ui/core';\n\nimport Opportunities from \"../../components/opportunities/Opportunities\";\n\nimport Search from \"../../components/search/Search\";\nimport AppLayout from \"../../layouts/AppLayout\";\n\n\nconst steps=['Search for your dream job', \"Choose one of Torre's Associated Mentors to help you\", 'Pay the rate and we will organize the meeting'];\n\nfunction HomePage({ hasErrors,dispatch }) {\n  console.log(\"hasErrors\",hasErrors)\n  return (\n    <AppLayout>\n      <Typography variant=\"h2\">Ready for getting your dream Job</Typography>\n      <br/>\n      <Typography variant=\"h6\">3 Simple Steps</Typography>\n      <br/>\n      <Stepper>\n        {steps.map((label, index) => {\n      \n          return (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <br/>\n      <Search/>\n      \n      {hasErrors ? <Typography variant=\"h2\" >NO RESULTS</Typography> : <Opportunities />}\n\n    </AppLayout>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  hasErrors: state.opportunities.hasErrors,\n\n});\n\nexport default connect(mapStateToProps)(HomePage);\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\nimport CustomSkeleton from \"../utils/CustomSkeleton\";\nimport { Box,Chip,Typography,makeStyles } from \"@material-ui/core\";\n\nconst toFirstUpperCase=(str)=>{\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom:10\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction PositionDetails({ details }) {\n\n  return (\n    <Box>\n      {details.map((x)=>(\n        <React.Fragment>\n          <h2>{toFirstUpperCase(x.code)}</h2>\n          <div>{x.content.split(\"\\n\").map((i,key) => {\n            return <><div key={key}>{i}</div><br/></>;\n        })}</div>\n        </React.Fragment>\n      ))}\n    </Box>\n  );\n}\n\n\nexport default PositionDetails;","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\nimport CustomSkeleton from \"../utils/CustomSkeleton\";\nimport { Box,Chip,Typography,makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom:10\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction OrganizationsDetail({ details }) {\n\n  return (\n    <Box>\n      {details.map((x)=>(\n        <React.Fragment>\n          <h2>{x.name}</h2>\n          <img src={x.picture}/>\n        </React.Fragment>\n      ))}\n    </Box>\n  );\n}\n\n\nexport default OrganizationsDetail;","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n\nimport PositionDetails from \"./PositionDetails\";\nimport OrganizationsDetail from \"./OrganizationsDetail\";\n\nimport CustomSkeleton from \"../utils/CustomSkeleton\";\nimport { fetchOpportunity, clearOpportunity } from \"../../services/opportunitydetail/opportunityDetailActions\";\nimport { Box,Chip,Typography,makeStyles } from \"@material-ui/core\";\n\n\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom:10\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction OpportunityDetail({ dispatch, opportunity }) {\n  const { id } = useParams();\n  const classes = useStyles();\n  useEffect(() => {\n    dispatch(clearOpportunity());\n    dispatch(fetchOpportunity(id));\n  }, [id, dispatch]);\n  console.log(\"oportunity\",opportunity)\n  let date = opportunity && +new Date(opportunity.deadline);\n\n  return (\n    <Box>\n\n      {opportunity? <OrganizationsDetail details={opportunity.organizations}/> : (<CustomSkeleton width={300} height={300} />)}\n      <br/>\n      <Typography variant=\"h5\" component=\"h2\">\n        {opportunity ? opportunity.objective : <CustomSkeleton width={500} />}\n      </Typography>\n      <Typography variant=\"body2\" component=\"div\">\n        {opportunity? opportunity.skills.length? opportunity.skills.map(x=>(<Chip key={x} className={classes.chipSkill} label={`${x}`} variant=\"outlined\" />)): \"\": (<CustomSkeleton width={90} />)}\n      </Typography>\n      <br/>\n      <Typography variant=\"body2\" component=\"div\">\n        {opportunity? `Compensation: ${opportunity.compensation}`: (<CustomSkeleton width={500} />)}\n      </Typography>\n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom component=\"div\">\n        {opportunity? date ?  (\"Ends \"+moment(date).startOf(\"hour\").fromNow()) :\"\": (<CustomSkeleton width={500} />)}\n      </Typography>\n \n      <Typography variant=\"h3\" component=\"div\">\n        {opportunity? \"Opportunity Description\" : (<CustomSkeleton width={500} />)}      \n      </Typography>\n      \n      {opportunity? <PositionDetails details={opportunity.details}/> : (<CustomSkeleton width={500} height={800} />)}\n\n      <br/><br/><br/><br/>\n    </Box>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  opportunity: state.opportunityDetail.opportunity,\n  hasErrors: state.opportunityDetail.hasErrors\n});\n\nexport default connect(mapStateToProps)(OpportunityDetail);","export const GET_OPPORTUNITY = \"GET_OPPORTUNITY\";\nexport const GET_OPPORTUNITY_SUCCESS = \"GET_OPPORTUNITY_SUCCESS\";\nexport const GET_OPPORTUNITY_FAILURE = \"GET_OPPORTUNITY_FAILURE\";\nexport const CLEAR_OPPORTUNITY = \"CLEAR_OPPORTUNITY\";\n\nexport const getOpportunity = () => ({\n  type: GET_OPPORTUNITY,\n});\n\nexport const getOpportunitySuccess = (opportunity) => ({\n  type: GET_OPPORTUNITY_SUCCESS,\n  payload: opportunity,\n});\n\nexport const getOpportunityFailure = () => ({\n  type: GET_OPPORTUNITY_FAILURE,\n});\n\nexport const clearOpportunity = () => ({\n  type: CLEAR_OPPORTUNITY,\n});\n\nexport function fetchOpportunity(id) {\n  const baseUrl='https://cors-anywhere.herokuapp.com/http://159.203.181.231/services/opportunities';\n  const URL = `${baseUrl}/${id}`;\n\n  return async (dispatch) => {\n    dispatch(getOpportunity());\n    try {\n      const res = await fetch(URL, {\n        method: 'GET',\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n      });\n      const data = await res.json();\n      console.log(\"data\",data.opportunity)\n      dispatch(getOpportunitySuccess(data.opportunity));\n    } catch (error) {\n      console.error(error);\n      dispatch(getOpportunityFailure());\n    }\n  };\n}\n","\n\n\n// Action Types\nexport const GET_MENTORS = 'GET_MENTORS';\nexport const GET_MENTORS_SUCCESS = 'GET_MENTORS_SUCCESS';\nexport const GET_MENTORS_FAILURE = 'GET_MENTORS_FAILURE';\nexport const GET_CURRENT_MENTORS = 'GET_CURRENT_MENTORS';\nexport const SET_GLOBAL_PAGE = 'SET_GLOBAL_PAGE';\nexport const CLEAR_MENTORS = 'CLEAR_MENTORS';\nexport const SELECT_MENTOR = 'SELECT_MENTOR';\nexport const CLEAR_SELECTED_MENTOR = 'CLEAR_SELECTED_MENTOR';\n// Create redux action creators that return an action\n\nconst shuffleArray=(array) =>{\n  for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }\n  return array;\n}\nexport const getMentors = () => ({\n  type: GET_MENTORS,\n});\n\nexport const getMentorsSuccess = mentors => ({\n  type: GET_MENTORS_SUCCESS,\n  payload: mentors,\n});\n\nexport const getMentorsFailure = () => ({\n  type: GET_MENTORS_FAILURE,\n});\n\nexport const getCurrentMentors = (start = 0, end = 10, globalPage = 1) => ({\n  type: GET_CURRENT_MENTORS,\n  payload: {\n    start,\n    end,\n    globalPage\n  },\n});\n\nexport const clearMentors = () => ({\n  type: CLEAR_MENTORS,\n});\nexport const clearSelectedMentor = () => ({\n  type: CLEAR_SELECTED_MENTOR,\n});\n\nexport const setGlobalPage = page => ({\n  type: SET_GLOBAL_PAGE,\n  payload: page,\n});\nexport const selectMentor = mentor => ({\n  type: SELECT_MENTOR,\n  payload: mentor,\n});\n// combine actions in an async thunk\nexport function fetchMentors() {\n  const baseUrl='https://cors-anywhere.herokuapp.com/http://159.203.181.231/services/mentors';\n  const URL = `${baseUrl}?size=100&offset=0`;\n  return async dispatch => {\n    dispatch(getMentors());\n\n    try {\n      const res = await fetch(URL, {\n        method: 'POST',\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json',\n          'Accept':'*/*',\n          'Accept-Encoding':'gzip,deflate,br'\n        }\n      });\n\n      let data = await res.json();\n      let mentors=shuffleArray(data.mentors);\n      console.log(\"shumentors\",JSON.stringify(mentors))\n      dispatch(getMentorsSuccess({mentors}));\n    } catch (error) {\n      console.error(error);\n      dispatch(getMentorsFailure());\n    }\n  }\n}\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { amber } from '@material-ui/core/colors';\n\nimport { Button,Card,CardActions,CardContent,CardMedia,Typography,makeStyles } from '@material-ui/core';\nimport CustomSkeleton from \"../utils/CustomSkeleton\";\nimport {selectMentor} from \"../../services/mentors/mentorsActions\"\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom:10\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  media: {\n    height: 0,\n    paddingTop: '100%'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  chipSkill:{\n    marginRight:5,\n    marginBottom:5\n  },\n  chooseButton:{\n    backgroundColor:amber[800],\n    \"&:hover\": {\n      backgroundColor:amber[900]\n    }\n  }\n});\n\nfunction Mentor({ dispatch,mentor }) {\n\n  const handleSelectMentor = () => {\n    console.log(\"selectedmentor\",mentor)\n    dispatch(selectMentor(mentor.username));\n  };\n  const classes = useStyles();\n  console.log(\"mentor\",mentor)\n  \n  let compensation=mentor && mentor.compensation  && `${mentor.compensation.currency} ${mentor.compensation.symbol} ${mentor.compensation.amount}`;\n\n  //console.log(\"individualmentor\",mentor,date)\n  //      to={mentor ? `/positions/${mentor.id}` : \"#\"}\n  return (\n  \n\n    <Card className={classes.root} variant=\"outlined\" >\n\n      <CardContent>\n        {mentor ?<img width=\"100%\" src={mentor.picture?mentor.picture:\"https://www.ohioattorneygeneral.gov/getattachment/a251ac9a-eb9f-4741-a9eb-e2f87a2446b8/Duckworth.aspx\"}></img>\n        :<CustomSkeleton width={300} height={300}/>}\n        <Typography variant=\"h5\" component=\"h2\">\n          {mentor ? mentor.name : <CustomSkeleton width={300} />}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\" component=\"div\" >\n          {mentor? mentor.professionalHeadline: (<CustomSkeleton width={90} />)}\n        </Typography>\n        <Typography className={classes.pos} variant=\"h4\" color=\"textSecondary\" component=\"div\" >\n          {mentor? `Rate: ${compensation}`: (<CustomSkeleton width={90} />)}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\" component=\"div\" >\n          {mentor? \"Risk free: In case we failed to arrange the meeting, we will return 100% of your money\": (<CustomSkeleton width={90} />)}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"large\" variant=\"contained\" color=\"primary\" className={classes.chooseButton} onClick={() => handleSelectMentor()}>CHOOSE ME</Button>\n        <a href={`https://bio.torre.co/en/${mentor.username}`}  target=\"_blank\" style={{ textDecoration: 'none' }}><Button size=\"large\" >View Bio in Torre</Button></a>\n      </CardActions>\n    </Card>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n\n});\n\nexport default connect(mapStateToProps)(Mentor);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid } from '@material-ui/core';\nimport Carousel from \"react-material-ui-carousel\"\nimport Slider from \"react-slick\"\nimport Mentor from \"./Mentor\";\nimport {\n  getCurrentMentors,\n  fetchMentors,\n} from \"../../services/mentors/mentorsActions\";\n\n\n\n\n\nfunction Mentors({ dispatch,loading, mentors,searching}) {\n  console.log(\"mentors\",mentors)\n\n\n  useEffect(() => {\n    async function fetchData() {\n      // You can await here\n      await dispatch(fetchMentors());\n      dispatch( getCurrentMentors(0,20,1));\n      // ...\n    }\n    fetchData();\n\n\n\n  }, []);\n\n\n  return (\n\n    <React.Fragment>\n    {mentors.length>0 &&  \n      <Carousel\n        autoPlay={false}\n        navButtonsAlwaysVisible={true}\n      >\n        {mentors.map((mentor) =>  <Mentor mentor={mentor} key={mentor.id} />)}\n    </Carousel>}\n</React.Fragment>\n  );\n}\n//<Mentor mentor={mentor} key={idx}\n//<Mentor mentor={mentor} key={idx}\n// Map Redux state to React component props\nconst mapStateToProps = (state) => ({\n  loading: state.mentors.loading,\n  mentors: state.mentors.current,\n  globalPage: state.mentors.globalPage\n});\n\nexport default connect(mapStateToProps)(Mentors);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  CardElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nexport default function CheckoutForm(selectedMentor) {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [clientSecret, setClientSecret] = useState('');\n  const [mentorFee, setMentorFee] = useState(null);\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(() => {\n    console.log(\"cardSelectedMentor\",selectedMentor)\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"https://cors-anywhere.herokuapp.com/http://159.203.181.231/services/payments/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(selectedMentor)\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setMentorFee(`${data.currency} ${data.symbol} ${data.amount}`)\n        setClientSecret(data.clientSecret);\n      });\n  }, []);\n  const cardStyle = {\n    hidePostalCode: true,\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          email,\n          name,\n        }\n      }\n    });\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    }\n  };\n  return succeeded ?(\n    <div className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n      <h3>Payment succeeded. Your mentor will contact you soon.</h3>\n   \n      <CheckCircleIcon style={{ fontSize: 150,color: \"#4caf50\" }}/>\n      <br/>\n      <p>Risk free: In case we failed to arrange the meeting, we will return 100% of your money</p>\n    </div>\n    \n  ):(\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n      <h2 style={{textAlign: 'center'}} >Please Provide your Credit Card Info</h2>\n      <p style={{textAlign: 'center'}}>For Testing Use 4242 4242 4242 4242 04/24 444</p>\n      <input\n        id=\"name\"\n        required\n        placeholder=\"Name on Card\"\n        value={name}\n        onChange={(e) => {\n          setName(e.target.value);\n        }}\n      />\n      <input\n        id=\"email\"\n        required\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => {\n          setEmail(e.target.value);\n        }}\n      />\n      <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} /><br/>\n      {mentorFee && <button\n        disabled={processing || disabled || succeeded}\n        id=\"card-submit\"\n      >\n        <span id=\"button-text\">\n          {processing ? (\n            <div className=\"spinner\" id=\"spinner\"></div>\n          ) : (\n            `Pay ${mentorFee}`\n          )}\n        </span>\n      </button>}\n      {/* Show any error that happens when processing the payment */}\n      {error && (\n        <div className=\"card-error\" role=\"alert\">\n          {error}\n        </div>\n      \n      )}\n    </form>\n  )\n}","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { Dialog,DialogTitle,DialogContent,Typography,makeStyles,useTheme } from '@material-ui/core';\nimport CardForm from \"../../components/card/CardForm\";\nimport {clearSelectedMentor} from \"../../services/mentors/mentorsActions\"\n\nimport \"./CardForm.css\";\n\nconst stripePromise = loadStripe(\"pk_test_51HNHGPEnkm8R0LuQq6ElEuxVbDmcuFHIEQlMsWolC1NdEbxEoaH91oWtFd8T31Wine6rtIwAZJ4lgylshF2bcD7D00ZmAFUhPS\");\n\nconst useStyles = makeStyles({\n  dialogPaper: theme=>( {\n    [theme.breakpoints.down(480)]: {\n      margin: 0,\n      width:'100%',\n      textAlign: 'center',\n      paddingTop:0\n    },\n    centered:{\n      textAlign: 'center'\n    }\n  })\n});\n\nfunction CardDialog({ dispatch,selectedMentor }) {\n\n  const [openModal, setOpenModal] = React.useState(false);\n  const handleModalOpen = () => {\n    setOpenModal(true);\n  };\n  const handleModalClose = () => {\n    console.log(\"closing modal\")\n    dispatch(clearSelectedMentor())\n    setOpenModal(false);\n    \n  };\n  useEffect(() => {\n    handleModalOpen();\n\n\n  }, [selectedMentor]);\n\n  const theme = useTheme();\n  const classes = useStyles(theme);\n  //console.log(\"individualmentor\",mentor,date)\n  //      to={mentor ? `/positions/${mentor.id}` : \"#\"}\n  return (\n\n\n    <Dialog\n      aria-labelledby=\"payment-dialog\"\n      open={openModal}\n      fullWidth={'md'}\n      onClose={handleModalClose}\n      classes={{ paper: classes.dialogPaper }}   \n    >\n\n    <DialogContent  style={{textAlign: 'center'}}>\n      <Elements stripe={stripePromise}>\n          <CardForm mentor={selectedMentor} />\n        </Elements>\n  \n    </DialogContent>\n  </Dialog>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  selectedMentor:state.mentors.selectedMentor\n});\n\nexport default connect(mapStateToProps)(CardDialog);\n\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {Grid,Typography} from '@material-ui/core';\n\nimport AppLayout from \"../../layouts/AppLayout\";\nimport OpportunityDetail from \"../../components/opportunitydetail/OportunityDetail\";\nimport Mentors from \"../../components/mentors/Mentors\";\nimport CardDialog from \"../../components/card/CardDialog\";\nfunction OpportunityDetailPage({ hasErrors,selectedMentor }) {\n  return (\n    <AppLayout>\n      {hasErrors ? \n        <Typography variant=\"h2\" >NO RESULTS</Typography> \n        : \n        <React.Fragment>\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={7}>\n              <OpportunityDetail />\n            </Grid>\n            <Grid item xs={12} sm={5}>\n              <br/>\n              <Typography variant=\"h4\" >Select a Mentor to help you with the Application for this JOB</Typography> \n              <br/>\n              <Mentors/>\n            </Grid>\n          </Grid>\n          {selectedMentor && <CardDialog />}\n          </React.Fragment>\n      }\n    </AppLayout>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  hasErrors: state.opportunityDetail.hasErrors,\n  selectedMentor: state.mentors.selectedMentor\n});\n\nexport default connect(mapStateToProps)(OpportunityDetailPage);\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"./pages/home/HomePage\";\nimport OpportunityDetailPage from \"./pages/opportunitydetail/OpportunityDetailPage\";\n\nexport default function Routes() {\n  return (\n    <HashRouter basename='/'>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/opportunity/:id\" component={OpportunityDetailPage} />\n      </Switch>\n    </HashRouter>\n  );\n}\n","import React from \"react\";\n\nimport Routes from \"./Routes\";\n\nconst App = () => <Routes />;\n\nexport default App;\n","export const initialState = {\n  expression: \"\",\n  page: 1,\n  searching: false,\n};\n\nexport default function queryReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"EXPRESSION\":\n      return { ...state, expression: action.payload, searching: true };\n    case \"CLEAR\":\n      return {\n        page: 1,\n        expression: \"\",\n        searching: false,\n      };\n    case \"PAGE\":\n      return { ...state, page: action.payload };\n    default:\n      return state;\n  }\n}\n","// Import all actions\nimport * as actions from \"./opportunitiesActions\";\n\nexport const initialState = {\n  opportunities: [],\n  loading: false,\n  hasErrors: false,\n  current: [],\n  globalPage: 0,\n  total:0,\n  selectedOportunity:{}\n};\n\nexport default function opportunitiesReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_OPPORTUNITIES:\n      return { ...state, loading: true };\n    case actions.GET_OPPORTUNITIES_SUCCESS:\n      let opportunities = [...state.opportunities];\n      //console.log(\"opportunitiespayload\",action.payload.results)\n      opportunities.push(action.payload.opportunities);\n      return { ...state, loading: false, hasErrors: false, opportunities,total:action.payload.total };\n    case actions.GET_OPPORTUNITIES_FAILURE:\n      return { ...state, loading: false, hasErrors: true };\n    case actions.GET_CURRENT_OPPORTUNITIES:\n      console.log(\"sate.opportunities\",state.opportunities)\n      return {\n        ...state,\n        current:\n          state.opportunities.length >= action.payload.globalPage\n            ? state.opportunities[action.payload.globalPage - 1].slice(\n                action.payload.start,\n                action.payload.end\n              )\n            : [],\n      };\n    case actions.SET_GLOBAL_PAGE:\n      return { ...state, globalPage: action.payload };\n    case actions.CLEAR_OPPORTUNITIES:\n      return { ...state, opportunities: [], globalPage: 1 };\n    default:\n      return state;\n  }\n}","import * as actions from \"./opportunityDetailActions\";\n\nexport const initialState = {\n  opportunity: null,\n  loading: false,\n  hasErrors: false,\n};\n\nexport default function opportunityReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_OPPORTUNITY:\n      return { ...state, loading: true };\n    case actions.GET_OPPORTUNITY_SUCCESS:\n      return { ...state, loading: false, opportunity: action.payload };\n    case actions.GET_OPPORTUNITY_FAILURE:\n      return { ...state, hasErrors: true, loading: false };\n    case actions.CLEAR_OPPORTUNITY:\n      return { opportunity: null, hasErrors: false, loading: false };\n    default:\n      return state;\n  }\n}\n","// Import all actions\nimport * as actions from \"./mentorsActions\";\n\nexport const initialState = {\n  mentors: [],\n  loading: false,\n  hasErrors: false,\n  current: [],\n  globalPage: 0,\n  total:0,\n  selectedMentor:null\n};\n\nexport default function mentorsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_MENTORS:\n      return { ...state, loading: true };\n    case actions.GET_MENTORS_SUCCESS:\n      let mentors = [...state.mentors];\n      //console.log(\"mentorspayload\",action.payload.results)\n      mentors.push(action.payload.mentors);\n      return { ...state, loading: false, hasErrors: false, mentors,total:action.payload.total };\n    case actions.GET_MENTORS_FAILURE:\n      return { ...state, loading: false, hasErrors: true };\n    case actions.GET_CURRENT_MENTORS:\n      console.log(\"sate.mentors\",state.mentors)\n      return {\n        ...state,\n        current:\n          state.mentors.length >= action.payload.globalPage\n            ? state.mentors[action.payload.globalPage - 1].slice(\n                action.payload.start,\n                action.payload.end\n              )\n            : [],\n      };\n    case actions.SET_GLOBAL_PAGE:\n      return { ...state, globalPage: action.payload };\n    case actions.SELECT_MENTOR:\n      return { ...state, selectedMentor: action.payload };\n      case actions.CLEAR_SELECTED_MENTOR:\n        return { ...state, selectedMentor: null };\n    case actions.CLEAR_MENTORS:\n      return { ...state, mentors: [], globalPage: 1 };\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\n\nimport queryReducer from \"./query/queryReducer\";\nimport opportunitiesReducer from \"./opportunities/opportunitiesReducer\";\nimport opportunityDetailReducer from \"./opportunitydetail/opportunityDetailReducer\";\nimport mentorsReducer from \"./mentors/mentorsReducer\";\n\nconst rootReducer = combineReducers({\n  query: queryReducer,\n  opportunities: opportunitiesReducer,\n  opportunityDetail: opportunityDetailReducer,\n  mentors:mentorsReducer\n});\n\nexport default rootReducer;\n","// External imports\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// Local imports\nimport rootReducer from \"./services\";\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// External imports\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n// Local imports\nimport App from \"./App\";\nimport { store } from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();"],"sourceRoot":""}